// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.1
// source: auth_token/auth_token.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{1}
}

func (x *Reply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//颁发和鉴权返回值
type ReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //业务码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //消息
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       //内容
}

func (x *ReplyResponse) Reset() {
	*x = ReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyResponse) ProtoMessage() {}

func (x *ReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyResponse.ProtoReflect.Descriptor instead.
func (*ReplyResponse) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{2}
}

func (x *ReplyResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReplyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReplyResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//登录实体信息
type SubjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUid             string `protobuf:"bytes,1,opt,name=userUid,proto3" json:"userUid,omitempty"`                         //代表用户身份的唯一ID （有绑定微信 soeuserid）
	EmployeeId          string `protobuf:"bytes,2,opt,name=employeeId,proto3" json:"employeeId,omitempty"`                   //租户下雇员id信息
	TenantId            string `protobuf:"bytes,3,opt,name=tenantId,proto3" json:"tenantId,omitempty"`                       //租户ID
	TenantCode          string `protobuf:"bytes,4,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`                   //租户下门店ID
	HoldShopCode        string `protobuf:"bytes,5,opt,name=holdShopCode,proto3" json:"holdShopCode,omitempty"`               //当前登录门店ID
	OfflineSystemUserId string `protobuf:"bytes,6,opt,name=offlineSystemUserId,proto3" json:"offlineSystemUserId,omitempty"` //当前登录人在业务系统中的 员工档案号
	OfflineSystemShopId string `protobuf:"bytes,7,opt,name=offlineSystemShopId,proto3" json:"offlineSystemShopId,omitempty"` //当前登录店号的 门店短号 例如001
}

func (x *SubjectInfo) Reset() {
	*x = SubjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectInfo) ProtoMessage() {}

func (x *SubjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectInfo.ProtoReflect.Descriptor instead.
func (*SubjectInfo) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{3}
}

func (x *SubjectInfo) GetUserUid() string {
	if x != nil {
		return x.UserUid
	}
	return ""
}

func (x *SubjectInfo) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *SubjectInfo) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SubjectInfo) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *SubjectInfo) GetHoldShopCode() string {
	if x != nil {
		return x.HoldShopCode
	}
	return ""
}

func (x *SubjectInfo) GetOfflineSystemUserId() string {
	if x != nil {
		return x.OfflineSystemUserId
	}
	return ""
}

func (x *SubjectInfo) GetOfflineSystemShopId() string {
	if x != nil {
		return x.OfflineSystemShopId
	}
	return ""
}

//颁发token请求信息
type AwardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sub          *SubjectInfo `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Platform     string       `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`         //登录平台
	LoginType    string       `protobuf:"bytes,3,opt,name=loginType,proto3" json:"loginType,omitempty"`       //登录平台
	LoginContent string       `protobuf:"bytes,4,opt,name=loginContent,proto3" json:"loginContent,omitempty"` //登录平台
	Extend       []string     `protobuf:"bytes,5,rep,name=extend,proto3" json:"extend,omitempty"`             //扩展支持参数 string 数组类型 后期可以扩展使用
}

func (x *AwardResponse) Reset() {
	*x = AwardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardResponse) ProtoMessage() {}

func (x *AwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardResponse.ProtoReflect.Descriptor instead.
func (*AwardResponse) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{4}
}

func (x *AwardResponse) GetSub() *SubjectInfo {
	if x != nil {
		return x.Sub
	}
	return nil
}

func (x *AwardResponse) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *AwardResponse) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *AwardResponse) GetLoginContent() string {
	if x != nil {
		return x.LoginContent
	}
	return ""
}

func (x *AwardResponse) GetExtend() []string {
	if x != nil {
		return x.Extend
	}
	return nil
}

type AwardReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                //业务码
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`           //消息
	RefreshToken string `protobuf:"bytes,4,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"` //内容
	AccessToken  string `protobuf:"bytes,5,opt,name=accessToken,proto3" json:"accessToken,omitempty"`   //内容
}

func (x *AwardReplyResponse) Reset() {
	*x = AwardReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardReplyResponse) ProtoMessage() {}

func (x *AwardReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardReplyResponse.ProtoReflect.Descriptor instead.
func (*AwardReplyResponse) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{5}
}

func (x *AwardReplyResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AwardReplyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AwardReplyResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AwardReplyResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

//鉴权实体消息
type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{6}
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//登录信息
type ResultModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoeUserUid string `protobuf:"bytes,1,opt,name=soeUserUid,proto3" json:"soeUserUid,omitempty"` //用户编号
	EmployeeId string `protobuf:"bytes,2,opt,name=employeeId,proto3" json:"employeeId,omitempty"` //租户下雇员id信息
	TenantId   string `protobuf:"bytes,3,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     //租户ID
	TenantCode string `protobuf:"bytes,4,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"` //租户下门店ID
	ShopCode   string `protobuf:"bytes,5,opt,name=shopCode,proto3" json:"shopCode,omitempty"`     //当前登录门店ID
	ShopId     string `protobuf:"bytes,6,opt,name=shopId,proto3" json:"shopId,omitempty"`         //门店编号
	ArchivesId string `protobuf:"bytes,7,opt,name=archivesId,proto3" json:"archivesId,omitempty"` //当前登录员工号  有雇员，有绑定才有
	LoginType  string `protobuf:"bytes,8,opt,name=loginType,proto3" json:"loginType,omitempty"`   //登录方式
	Content    string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`       //登录内容备忘
	Platform   string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`    //登录平台
}

func (x *ResultModel) Reset() {
	*x = ResultModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultModel) ProtoMessage() {}

func (x *ResultModel) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultModel.ProtoReflect.Descriptor instead.
func (*ResultModel) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{7}
}

func (x *ResultModel) GetSoeUserUid() string {
	if x != nil {
		return x.SoeUserUid
	}
	return ""
}

func (x *ResultModel) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *ResultModel) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ResultModel) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *ResultModel) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *ResultModel) GetShopId() string {
	if x != nil {
		return x.ShopId
	}
	return ""
}

func (x *ResultModel) GetArchivesId() string {
	if x != nil {
		return x.ArchivesId
	}
	return ""
}

func (x *ResultModel) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *ResultModel) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ResultModel) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ResultModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //业务码
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //消息
	Data    string       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       //内容
	Model   *ResultModel `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`     //返回的 model信息
}

func (x *ResultModelResponse) Reset() {
	*x = ResultModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_token_auth_token_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultModelResponse) ProtoMessage() {}

func (x *ResultModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_token_auth_token_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultModelResponse.ProtoReflect.Descriptor instead.
func (*ResultModelResponse) Descriptor() ([]byte, []int) {
	return file_auth_token_auth_token_proto_rawDescGZIP(), []int{8}
}

func (x *ResultModelResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResultModelResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ResultModelResponse) GetModel() *ResultModel {
	if x != nil {
		return x.Model
	}
	return nil
}

var File_auth_token_auth_token_proto protoreflect.FileDescriptor

var file_auth_token_auth_token_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63,
	0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x22, 0x1d, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x05,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6c, 0x64,
	0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x6f, 0x6c, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x13, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x22, 0xb4, 0x01, 0x0a, 0x0d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x75,
	0x62, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x24, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb1, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x8a, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f,
	0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x32, 0x9a, 0x03, 0x0a, 0x10, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53,
	0x0a, 0x0c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x22, 0x2e,
	0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x1d, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1c, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1d, 0x2e,
	0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73,
	0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x23, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66,
	0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66,
	0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x27, 0x0a, 0x0e, 0x63, 0x6e, 0x2e, 0x73, 0x6f, 0x65,
	0x73, 0x6f, 0x66, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x88, 0x01, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_token_auth_token_proto_rawDescOnce sync.Once
	file_auth_token_auth_token_proto_rawDescData = file_auth_token_auth_token_proto_rawDesc
)

func file_auth_token_auth_token_proto_rawDescGZIP() []byte {
	file_auth_token_auth_token_proto_rawDescOnce.Do(func() {
		file_auth_token_auth_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_token_auth_token_proto_rawDescData)
	})
	return file_auth_token_auth_token_proto_rawDescData
}

var file_auth_token_auth_token_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_auth_token_auth_token_proto_goTypes = []interface{}{
	(*Request)(nil),             // 0: cn.soesoft.rpc.Request
	(*Reply)(nil),               // 1: cn.soesoft.rpc.Reply
	(*ReplyResponse)(nil),       // 2: cn.soesoft.rpc.ReplyResponse
	(*SubjectInfo)(nil),         // 3: cn.soesoft.rpc.SubjectInfo
	(*AwardResponse)(nil),       // 4: cn.soesoft.rpc.AwardResponse
	(*AwardReplyResponse)(nil),  // 5: cn.soesoft.rpc.AwardReplyResponse
	(*AuthResponse)(nil),        // 6: cn.soesoft.rpc.AuthResponse
	(*ResultModel)(nil),         // 7: cn.soesoft.rpc.ResultModel
	(*ResultModelResponse)(nil), // 8: cn.soesoft.rpc.ResultModelResponse
}
var file_auth_token_auth_token_proto_depIdxs = []int32{
	3, // 0: cn.soesoft.rpc.AwardResponse.sub:type_name -> cn.soesoft.rpc.SubjectInfo
	7, // 1: cn.soesoft.rpc.ResultModelResponse.model:type_name -> cn.soesoft.rpc.ResultModel
	4, // 2: cn.soesoft.rpc.AuthTokenService.AwardedToken:input_type -> cn.soesoft.rpc.AwardResponse
	6, // 3: cn.soesoft.rpc.AuthTokenService.RefreshToken:input_type -> cn.soesoft.rpc.AuthResponse
	6, // 4: cn.soesoft.rpc.AuthTokenService.AuthToken:input_type -> cn.soesoft.rpc.AuthResponse
	6, // 5: cn.soesoft.rpc.AuthTokenService.AuthTokenResultModel:input_type -> cn.soesoft.rpc.AuthResponse
	0, // 6: cn.soesoft.rpc.AuthTokenService.Hello:input_type -> cn.soesoft.rpc.Request
	5, // 7: cn.soesoft.rpc.AuthTokenService.AwardedToken:output_type -> cn.soesoft.rpc.AwardReplyResponse
	2, // 8: cn.soesoft.rpc.AuthTokenService.RefreshToken:output_type -> cn.soesoft.rpc.ReplyResponse
	2, // 9: cn.soesoft.rpc.AuthTokenService.AuthToken:output_type -> cn.soesoft.rpc.ReplyResponse
	8, // 10: cn.soesoft.rpc.AuthTokenService.AuthTokenResultModel:output_type -> cn.soesoft.rpc.ResultModelResponse
	1, // 11: cn.soesoft.rpc.AuthTokenService.Hello:output_type -> cn.soesoft.rpc.Reply
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_auth_token_auth_token_proto_init() }
func file_auth_token_auth_token_proto_init() {
	if File_auth_token_auth_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_token_auth_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_token_auth_token_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_token_auth_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_token_auth_token_proto_goTypes,
		DependencyIndexes: file_auth_token_auth_token_proto_depIdxs,
		MessageInfos:      file_auth_token_auth_token_proto_msgTypes,
	}.Build()
	File_auth_token_auth_token_proto = out.File
	file_auth_token_auth_token_proto_rawDesc = nil
	file_auth_token_auth_token_proto_goTypes = nil
	file_auth_token_auth_token_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthTokenServiceClient is the client API for AuthTokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthTokenServiceClient interface {
	//根据subject 信息 获取服务器颁发的 token
	AwardedToken(ctx context.Context, in *AwardResponse, opts ...grpc.CallOption) (*AwardReplyResponse, error)
	//根据平台token 来获取刷新token
	RefreshToken(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ReplyResponse, error)
	//传递 token 到服务器进行验证
	AuthToken(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ReplyResponse, error)
	//授权之后 返回鉴权model
	AuthTokenResultModel(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ResultModelResponse, error)
	Hello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type authTokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthTokenServiceClient(cc grpc.ClientConnInterface) AuthTokenServiceClient {
	return &authTokenServiceClient{cc}
}

func (c *authTokenServiceClient) AwardedToken(ctx context.Context, in *AwardResponse, opts ...grpc.CallOption) (*AwardReplyResponse, error) {
	out := new(AwardReplyResponse)
	err := c.cc.Invoke(ctx, "/cn.soesoft.rpc.AuthTokenService/AwardedToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) RefreshToken(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ReplyResponse, error) {
	out := new(ReplyResponse)
	err := c.cc.Invoke(ctx, "/cn.soesoft.rpc.AuthTokenService/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) AuthToken(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ReplyResponse, error) {
	out := new(ReplyResponse)
	err := c.cc.Invoke(ctx, "/cn.soesoft.rpc.AuthTokenService/AuthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) AuthTokenResultModel(ctx context.Context, in *AuthResponse, opts ...grpc.CallOption) (*ResultModelResponse, error) {
	out := new(ResultModelResponse)
	err := c.cc.Invoke(ctx, "/cn.soesoft.rpc.AuthTokenService/AuthTokenResultModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) Hello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/cn.soesoft.rpc.AuthTokenService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthTokenServiceServer is the server API for AuthTokenService service.
type AuthTokenServiceServer interface {
	//根据subject 信息 获取服务器颁发的 token
	AwardedToken(context.Context, *AwardResponse) (*AwardReplyResponse, error)
	//根据平台token 来获取刷新token
	RefreshToken(context.Context, *AuthResponse) (*ReplyResponse, error)
	//传递 token 到服务器进行验证
	AuthToken(context.Context, *AuthResponse) (*ReplyResponse, error)
	//授权之后 返回鉴权model
	AuthTokenResultModel(context.Context, *AuthResponse) (*ResultModelResponse, error)
	Hello(context.Context, *Request) (*Reply, error)
}

// UnimplementedAuthTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthTokenServiceServer struct {
}

func (*UnimplementedAuthTokenServiceServer) AwardedToken(context.Context, *AwardResponse) (*AwardReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AwardedToken not implemented")
}
func (*UnimplementedAuthTokenServiceServer) RefreshToken(context.Context, *AuthResponse) (*ReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (*UnimplementedAuthTokenServiceServer) AuthToken(context.Context, *AuthResponse) (*ReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthToken not implemented")
}
func (*UnimplementedAuthTokenServiceServer) AuthTokenResultModel(context.Context, *AuthResponse) (*ResultModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthTokenResultModel not implemented")
}
func (*UnimplementedAuthTokenServiceServer) Hello(context.Context, *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterAuthTokenServiceServer(s *grpc.Server, srv AuthTokenServiceServer) {
	s.RegisterService(&_AuthTokenService_serviceDesc, srv)
}

func _AuthTokenService_AwardedToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AwardResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).AwardedToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cn.soesoft.rpc.AuthTokenService/AwardedToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).AwardedToken(ctx, req.(*AwardResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cn.soesoft.rpc.AuthTokenService/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).RefreshToken(ctx, req.(*AuthResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_AuthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).AuthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cn.soesoft.rpc.AuthTokenService/AuthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).AuthToken(ctx, req.(*AuthResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_AuthTokenResultModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).AuthTokenResultModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cn.soesoft.rpc.AuthTokenService/AuthTokenResultModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).AuthTokenResultModel(ctx, req.(*AuthResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cn.soesoft.rpc.AuthTokenService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).Hello(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthTokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cn.soesoft.rpc.AuthTokenService",
	HandlerType: (*AuthTokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AwardedToken",
			Handler:    _AuthTokenService_AwardedToken_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _AuthTokenService_RefreshToken_Handler,
		},
		{
			MethodName: "AuthToken",
			Handler:    _AuthTokenService_AuthToken_Handler,
		},
		{
			MethodName: "AuthTokenResultModel",
			Handler:    _AuthTokenService_AuthTokenResultModel_Handler,
		},
		{
			MethodName: "Hello",
			Handler:    _AuthTokenService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth_token/auth_token.proto",
}
